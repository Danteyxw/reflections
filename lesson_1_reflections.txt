// reflection 1

// How did viewing a diff between 2 versions of a file help you see the bug that was introduced?

It shows the changes made to the file so I don't have to check every single line of code.

// How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

For one, it allows you to debug by comparing the changes made to the file. Besides, It allows the program to be rolled back if something disastrous happens. It also helps other programmers to understand the program. 

// What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

You can choose to commmit at a logical save point.

// Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Many programs contain files that are inter-related and changes together while essays and other texts are essentially independent.

// How can you use the commands git log and git diff to view the history of files?

git log shows the history of commits while git diff allows you to see the changes between 2 commits.

// How might using version control make you more confident to make changes that could break something?

You can always checkout a previous commit.